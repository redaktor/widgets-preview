name: Release

on:
  release:
    types: [created]

jobs:
  release:
    runs-on: ubuntu-latest

    env:
      CI: true

    # Note that these steps are *identical* to build-and-test (with the caveat
    # that build-and-test uses several versions of Node, and Release only uses
    # 10.x) at least until the actual publishing happens.  Ideally, we could
    # delegate to the build- and-test workflow, but I haven't found a way to do
    # that yet.
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: 10.x

      - name: cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-10.x-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-10.x-
            ${{ runner.os }}-npm-

      - name: install
        run: |
          npm ci
          npm i --no-save eslint ts-node typescript

      - name: static checks
        run: |
          npm run lint

      - name: build
        run: |
          npm run build

      - name: test
        run: |
          npm run testb
          npm run test:types

      # And finally... publish it!  Note that we create the .npmrc file
      # "just in time" so that `npm publish` can get the auth token from the
      # environment
      - name: publish
        run: |
          echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc
          npm publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
