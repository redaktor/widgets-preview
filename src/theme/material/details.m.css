.root {
	display: flex;
	padding: 0;
	margin: 0;
}
.root.meta {
	display: inline-block;
}
.serif {
	composes: serif from './_typo.css';
}
.summary {
	composes: meta from './_typo.css';
	outline: none;
	text-decoration: none;
	color: var(--text-muted);
	padding-top: var(--pt);
	margin-bottom: calc(var(--mb, 16px) - var(--ui-border-width-emphasized) - 1px);
  background-repeat: no-repeat;
	list-style: none;
}
.colored .summary {
	color: var(--ui-text-muted);
}
.summary:focus {
	outline: none;
}
.root:hover .summary,
.root[open] .summary {
	color: var(--text);
}
.colored[open] .summary {
	color: var(--ui-text);
}
.root[open] .summary:hover {
	color: var(--text-muted);
}
.colored:hover .summary,
.colored[open] .summary:hover {
	color: var(--text);
}
.root:not([open]).oneLine {
	height: var(--line2);
}
.summaryContent {
	display: inline-block;
	padding-bottom: calc(var(--ui-border-width-emphasized) * 2);
	margin-bottom: calc(var(--ui-border-width-emphasized) * -2);
	max-width: calc(100% - (var(--grid-base,8px) * 2));
}
.responsive .summaryContent {
	width: calc(100% - (var(--grid-base,8px) * 2));
	overflow: hidden;
}
.summaryContent::after {
	content: '';
	display: block;
	height: var(--ui-border-width-emphasized);
	width: 100%;
	background: var(--ui-focus-alpha);
	margin-bottom: calc(var(--ui-border-width-emphasized) * -1 - 1px);
	position: relative;
	top: 1px;
	transform: scaleX(0);
}
.animated .summaryContent::after {
	transition: transform var(--ui-dpd-4) var(--ui-easing);
}
.summary:focus .summaryContent::after,
.root[open] .summaryContent::after {
	background: var(--ui-focus);
}
.summary:focus .summaryContent::after {
	transform: scaleX(1);
}
.summary + .content {
	padding-top: 0 !important;
}
.summary::-webkit-details-marker {
	display: inline-block;
}

.metaSummary {
	composes: serif from './_typo.css';
	display: inline;
	font-style: italic;
	list-style: none;
	padding: 0 0 0 0.618ch;
}
.selected {
	position: relative;
}
*:not(.metaSummary) > .selected::after {
	content: "";
	position: absolute;
	left: 0px;
	bottom: var(--ui-border-width-emphasized);
	width: 100%;
	height: var(--ui-border-width-emphasized);
	background: var(--ui-accent);
}
.metaSummary > .selected {
	border-bottom: var(--ui-border-width-emphasized) solid var(--ui-accent);
}
.metaSummary:hover,
.summary:hover {
	cursor: pointer;
}

.item {
	display: inline;
}
/*
.animated {
		--posY: calc(100% - 1px);
		--fromColor: transparent;
		--toColor: transparent;
		--bgPos: calc(76px * -1) var(--posY), 100% var(--posY), 0px var(--posY);
		--bgPosHover: calc(100% + 76px) var(--posY), 100% var(--posY), 0px var(--posY);
		--bgSizeHover: 76px 2px, 0 2px, 100% 2px;
		background-image: linear-gradient(var(--bg), var(--bg)),
	    linear-gradient(var(--fromColor), var(--fromColor)),
	    linear-gradient(var(--toColor), var(--toColor));
	  background-size: 76px 2px, 100% 2px, 0 2px;
	  background-position: var(--bgPos);
	  transition: background-size var(--ui-dpd-0) linear, background-position var(--ui-dpd-0) linear;
}
.animated:hover {
	--fromColor: var(--ui-close, red);
	--toColor: var(--ui-open, green);
	cursor: pointer;
  background-size: var(--bgSizeHover);
  background-position: var(--bgPosHover);
	transition: background-size var(--ui-dpd-1) linear, background-position var(--ui-dpd-1) linear;
}
.root[open] .animated:hover {
	--fromColor: var(--ui-open, green);
	--toColor: var(--ui-close, red);
}
*/
/*
.summary:focus::before {
	content: "";
  width: 0;
  height: 0;
	position: absolute;
	border-bottom: 10px solid transparent;
  border-top: 10px solid transparent;
  border-left: 16px solid var(--ui-focus-alpha);
  top: 7px;
  left: 7px;
}
.root[open] .summary:focus::before {
	border-bottom: none;
  border-top: 15px solid var(--ui-focus-alpha);
  border-right: 9px solid transparent;
  border-left: 9px solid transparent;
  top: 12px;
  left: 5px;
}

.summary:hover {
	cursor: pointer;
	background: linear-gradient(90deg, var(--paper) 0%, var(--paper) 24px,
		var(--surface) 24px, var(--surface) 100%);
}
.summary:hover::marker {
	color: var(--text);
}
*/
