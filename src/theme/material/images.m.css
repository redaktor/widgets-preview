.root {
	width: 100%;
}
.row { }
.column { }
.loaded { }
.lightImage, .darkImage { }
.noscript { }

/* A "page" with images */
.page {
	--minWidth: 240px;
	--gap: 4px;
	display: grid;
	grid-gap: var(--gap, var(--grid-base, 8px));
	grid-template-columns: repeat(auto-fill, minmax(calc((var(--minWidth) / 2) - var(--gap)), 1fr));
	grid-auto-rows: calc(var(--line) - var(--gap));
	padding-bottom: var(--gap, var(--grid-base, 8px));
	min-height: calc(var(--line) * 12);
	width: 100%;
	position: relative;
	order: 5;
	z-index: 2;
}
.hasCounter > .page::before {
	content: attr(data-count);
	margin: 0 -32px 0 0;
	padding: 0;
	order: 2;
	position: absolute;
	top: calc(var(--line) * -1.5);
	right: 50%;
	width: 64px;
	text-align: center;
	z-index: -1;
	pointer-events: none;
}
.singleItem.hasCounter > .page::before {
	margin: 0;
	top: calc(var(--l,100%) + var(--line) * 6);
	right: var(--pr,var(--grid-base,8px));
}
.navBottom .page {
	order: 0;
}
.root.singleRow .page {
	min-height: calc(var(--line) * 6);
}
.root.singleItem .page {
	grid-area: image;
	grid-template-columns: 100%;
	place-content: center;
	place-items: start;
	min-height: unset;
}
/* The captions for the "page" */
.pageCaption {
	grid-area: captions;
	z-index: 3;
	max-width: var(--w, 100%);

	display: flex;
	flex-direction: column;
	flex-basis: 100%;
	flex-wrap: nowrap;
	position: relative;
}
/* The snap-scrolling selection of images */
.scrollWrapper {
	grid-area: scrollimages;
	overflow-x: auto;
  white-space: nowrap;
  display: flex;
  width: 100%;
	height: calc(var(--line) * 6);
	z-index: 1;
}


/* The weird CSS rule for only hover devices */
@media not all and (hover: none) {
	.scrollWrapper.desaturateScroll {
		transition: filter var(--ui-dpd-2,240ms) var(--ui-easing);
		filter: grayscale(1) opacity(0.618);
	}
	.root:hover .scrollWrapper.desaturateScroll {
		filter: grayscale(0) opacity(1);
	}
}

/* 2018 spec - For Safari 11, Chrome 69+ */
.snap {
  scroll-snap-type: x mandatory;
  -webkit-overflow-scrolling: touch; /* Needed to work on iOS Safari */
}
.snap > * {
  scroll-snap-align: start;
}
.snap .media {
	display: flex;
	align-self: flex-end;
	align-items: flex-end;
	margin: 0;
	padding: 0;
}
/* 2015 spec - For Firefox, Edge, IE */
.snap {
	--step: calc(var(--line) * 15);
  scroll-snap-type: mandatory;
  -ms-scroll-snap-type: mandatory;
  scroll-snap-points-x: repeat(var(--step, 100%));
  -ms-scroll-snap-points-x: repeat(var(--step, 100%));
}
.scrollWrapper > * {
	min-width: var(--line5);
}
.snap::-webkit-scrollbar {
  width: 11px;
}
.snap {
  scrollbar-width: thin;
  scrollbar-color: var(--ui-flat-off) var(--ui-bg);
}
.snap::-webkit-scrollbar-track {
  background: var(--ui-bg);
}
.snap::-webkit-scrollbar-thumb {
  background-color: var(--ui-flat-on);
  border-radius: 6px;
  border: 3px solid var(--ui-bg);
}

.media {
	position: relative;
	overflow: hidden;
	grid-row-end: span var(--l, auto);
}
.m9by16 { --l: 11; }
.m2by3 { --l: 10; }
.m3by4 { --l: 9; }
.m4by5 { --l: 8; }
.m6by7 { --l: 7; }
.m1by1, .m7by6 { --l: 6; }
.m5by4, .m4by3 { --l: 5; }
.m3by2, .m37by20, .m16by10, .m16by9 { --l: 4; }
.m16by7, .m21by9, .m8by3, .m3by1 { --l: 3; }
.m16by5, .m9by2 { --l: 2; }
.fix1by1 img {
	height: calc(var(--line) * 6);
	object-fit: contain;
}
.scrollWrapper .fix1by1 img {
	height: calc(var(--line) * 5);
}
.hasPagination {
	--sensitivecbtop: calc(var(--touch-target-min, 40px) * 2);
}

.hasPagination.multiItem {
	display: flex;
	flex-wrap: wrap;
	align-items: center;
	justify-content: space-around;
}
.hasPagination.hasCounter.multiItem {
	justify-content: center;
}
.hasPagination.singleItem {
	display: grid;
	place-content: start;
	place-items: start;
	grid-template: "image" "scrollimages" "captions";
}
.break {
	order: 4;
}

.control {
	align-items: center;
	justify-content: center;
	min-width: var(--touch-target-min, 40px);
	min-height: var(--line2);
	padding: 0;
	margin: 0;
	cursor: pointer;
	color: var(--text);
	transition: var(--ui-dpd-0,80ms) color var(--ui-easing);
	border-radius: 9999px;
}
.prev.control {
	order: 1;
}
.next.control {
	order: 3;
}
.firstControl { }
.lastControl { }

.singleItem .pageRadio,
.hasCounter .pageRadio {
	visibility: hidden;
	position: absolute;
	top: -4000px;
	height: 0px;
}

.singleItem .control {
	display: flex;
	grid-area: image;
	place-self: start right;
	z-index: 8;
	background-color: var(--ui-bg-opaque);
	box-shadow: var(--ui-dp-1);
}
.singleItem .control::after {
	content: "";
	position: absolute;
	top: calc(var(--grid-base,8px) * -1);
	width: var(--touch-target-min, 40px);
	height: calc(var(--touch-target-min, 40px) * 2);
}
.singleItem .prev.control {
	margin: var(--pr,var(--grid-base,8px)) calc(var(--touch-target-min, 40px) + var(--pr,var(--grid-base,8px)) * 2) 0px 0px;
}
.singleItem .next.control {
	margin: var(--pr,var(--grid-base,8px)) var(--pr,var(--grid-base,8px)) 0px 0px;
}

.multiItem .control {
	display: none;
}
.hasCounter.multiItem .control {
	margin: 0px calc(var(--grid-base,8px) * 2);
}
.multiItem .pageRadio:checked + .prev.control,
.multiItem .pageRadio:checked + .prev.control + .next.control,
.multiItem .pageRadio {
	display: flex;
}
.pageRadio:not(:checked) + .prev.control + .next.control + .page,
.pageRadio:not(:checked) + .prev.control + .next.control + .page + .pageCaption {
	display: none;
}

.multiItem:not(.hasCounter) .pageRadio {
	display: flex;
	order: 2;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	border-radius: 50%;
	width: var(--line);
	height: var(--line);
	border: var(--ui-border-width-emphasized) solid var(--paper, #999);
	background-color: var(--paper, #999);
	transition: var(--ui-dpd-0,80ms) all var(--ui-easing);
	margin: 0;
	padding: 0;
	z-index: 2;
	cursor: pointer;
}
.multiItem:not(.hasCounter) .pageRadio::after {
	color: var(--text-muted);
	display: flex;
	width: 100%;
	align-items: center;
	justify-content: center;
	text-align: center;
	position: relative;
	top: -1px;
}
.multiItem:not(.hasCounter) .pageRadio:checked::after {
	content: attr(data-i);
}
.multiItem .pageRadio:checked {
	border-color: var(--ui-border, #999);
	background-color: transparent;
}
.multiItem .pageRadio:checked::after {
	color: var(--text);
}

/* The weird CSS rule for only hover devices */
@media not all and (hover: none) {
	.root:not(.hasCounter) .pageRadio:not(:checked) {
		border-color: var(--paper, #999);
	}
	.root:not(.hasCounter) .pageRadio:not(:checked):hover {
		border-color: var(--border, #666);
	}
	.control {
		color: var(--text);
	}
	.root .pageRadio:checked + .prev.control:hover,
	.root .pageRadio:checked + .prev.control + .next.control:hover {
		color: var(--ui-filled, #eee);
	}

	.root .snap::-webkit-scrollbar-thumb {
	  background-color: var(--ui-flat-off);
	}
	.root .snap:hover::-webkit-scrollbar-thumb {
	  background-color: var(--ui-flat-on);
	}

	.root.singleItem .control {
		display: none;
	}
	.root.singleItem:hover .pageRadio:checked + .prev.control,
	.root.singleItem:hover .pageRadio:checked + .prev.control + .next.control {
		display: flex;
	}
}

/* native masonry */
@supports (grid-template-rows: masonry) {
	.micro .page { --mcols: 1; --gap: 0; }
	.xs .page { --mcols: 2; --gap: 0; }
	.s .page { --mcols: 2; }
	.m .page { --mcols: 3; }
	.l .page { --mcols: 4; }
	.xl .page { --mcols: 5; }
	.xxl .page { --mcols: 6; --gap: calc(var(--grid-base, 8px) * 2); }
  .page {
	  grid-template-columns: repeat(var(--mcols, 2), 1fr);
	  grid-template-rows: masonry;
	}
	.page figure img {
	  grid-row: 1 / -1;
	  grid-column: 1;
	}
}


.row {
	--mw: 480px;
	--mt: calc(var(--pt) * -1);
	--mlr: auto;
	max-width: var(--mw);
	height: calc(var(--line5) + var(--pt));
	margin: var(--mt) var(--mlr) 0 var(--mlr);
}


@media screen and (max-width: 768px) {
	.root.row .page {
		display: flex;
		min-height: calc(var(--line) * 7);
		margin: 0 auto;
	}
}

@media screen and (min-width: 768px) {
	.row .page {
		--s: 0.45; --w: 480px; --mt: var(--pt);
		transform-origin: center top;
		transform: scale(var(--s, 0.5));
		min-width: var(--w, 200%);
		margin-top: var(--mt, 0px);
	}
}


@media screen and (max-width: 768px) {
	.row { --mw: 100%; }
}
@media screen and (min-width: 769px) {
	.row {
		--mw: 240px; --mt: calc((var(--line2) + var(--pt)) * -1);
		height: calc((var(--line) * 12) + var(--pt));
	}
}
@media screen and (min-width: 780px) {
	.row .page { --s: 0.5; --mt: var(--lineHalf); }
}
@media screen and (min-width: 821px) {
	.row { --mt: calc((var(--line3) + var(--pt)) * -1); }
	.row .page { --s: 0.55; --mt: var(--pt); }
}
@media screen and (min-width: 848px) {
	.row .page { --s: 0.6; --mt: 0px; }
}
@media screen and (min-width: 986px) {
	.row { --mt: calc((var(--line4) + var(--pt)) * -1); --mw: 360px; }
	.row .page { --s: 0.65; }
}
@media screen and (min-width: 1110px) {
	.row {
		--mw: 520px;
		--mt: calc((var(--line) + var(--pt)) * -1);
		height: calc((var(--line) * 10) + var(--pt));
	}
	.row .page { --w: 720px; }
}
@media screen and (min-width: 1228px) {
	.row .page { --s: 0.7; }
}
@media screen and (min-width: 1580px) {
	.row { --mlr: var(--lineHalf); }
}
@media screen and (min-width: 1640px) {
	.row { --mlr: var(--line); }
}
@media screen and (min-width: 1950px) {
	.row { --mlr: var(--line2); }
}

@media screen and (min-width: 2120px) {
	.row { --mw: 1040px; --mt: calc(var(--pt) * -1); --mlr: var(--line); }
	.row .page { --w: 1480px; }
}
@media screen and (min-width: 2240px) {
	.row { --mw: 1280px; }
	.row .page { --s: 0.75; }
}
@media screen and (min-width: 2668px) {
	.row { --mlr: var(--line2); }
	.row .page { --s: 0.875; --mt: var(--pt);	}
}
@media screen and (min-width: 2800px) {
	.row { --mw: 1540px; }
}
@media screen and (min-width: 2960px) {
	.row .page { --s: 1; --mt: calc(var(--pt) + var(--gap)); }
}
@media screen and (min-width: 3000px) {
	.row { --mlr: var(--line3); }
}
@media screen and (min-width: 3200px) {
	.row { --mlr: auto; }
}

.columnTypo {
	composes: typo from './_columns.m.css';
}
.rowTypo {
	composes: typo from './_rows.m.css';
}
.content {
	/* composes: serif from './_typo.css'; */
}
.summary {
	padding: 0;
	margin-bottom: 0;
}
.column .contentDetails {
	order: 3;
	padding-top: var(--pt);
	margin-bottom: var(--mb);
}
.row .contentDetails,
.column .attributions {
	order: 2;
	margin-top: var(--line);
	transition: margin-left var(--ui-dpd-4,320ms) var(--ui-easing);
}
.column .contentDetails[open] + .attributions {
	margin-left: var(--line);
}
.row .attributions {
	order: 1;
	width: 50%;
	min-width: 320px;
}

.contentDetailsSummary {
	text-overflow: ellipsis;
	white-space: nowrap;
  width: 100%;
  overflow: hidden;
	outline: none;
	background: var(--bg);
	font-weight: var(--weight-semibold);
	padding-left: 4px;
}
.muted {
	color: var(--text-muted);
}
.multiItem .contentDetails {
	transition: margin-top var(--ui-dpd-0,120ms) var(--ui-easing-leave);
	z-index: 9999;
	background: var(--bg);
}
.multiItem .contentDetails[open] {
	transition: margin-top var(--ui-dpd-2,240ms) var(--ui-easing);
	margin-top: calc(var(--line) * (var(--l, 0) + 9) * -1);
}

.root .contentWrapper > .summary {
	margin-bottom: calc(var(--mb) - var(--line));
}

.contentWrapper {
	display: flex;
	flex-direction: column;
	flex: 1 1 auto;
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	max-width: 64ch;
	padding: 0;
	order: 5;
}
.contentCollapsed {
	padding: 0 var(--p);
}

.row .contentWrapper {
	min-width: 38ch;
	flex: 1;
	z-index: 2;
}
.micro.row .contentWrapper,
.xs.row .contentWrapper {
	min-width: 240px;
}
.row .columnName,
.column .rowName,
.sensitiveCheckbox:checked ~ .rowName,
.sensitiveCheckbox:checked ~ .columnName,
.sensitiveCheckbox:not(:checked) ~ .summaryPaginated,
.sensitiveCheckbox:checked ~ .contentWrapper,
.sensitiveCheckbox:checked ~ .attachment {
	display: none;
}
