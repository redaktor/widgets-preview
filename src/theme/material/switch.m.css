.root {
	--checkbox-ripple-alpha: 1;
	--checkbox-ripple-size: 2.5;
	composes: ui ui-transition from './_ui.m.css';
	user-select: none;
	padding: 0 !important;
}
.animated { composes: animated from './checkbox.m.css'; }
.disabled { composes: disabled from './checkbox.m.css'; }

.track {
	--track-h: calc(var(--size) * var(--caph) + var(--pt));
	--thumb-h: calc(var(--h) - var(--pt));
	display: inline-block;
	min-width: calc(var(--h) * 1.618 + var(--plr));
	position: relative;
	user-select: none;
	z-index: 0;
	margin-bottom: var(--mb) !important;
}


.track::before {
	content: "";
	display: inline-block;
	width: calc(var(--thumb-h) * 1.618);
	height: var(--track-h);
	border-radius: calc(var(--thumb-h) * 0.5);
	margin-top: calc(var(--pt) * -1);
}
.flat .track::before {
	background: linear-gradient(to right, var(--ui-flat-off) 50%, var(--ui-flat-hover) 50%);
}
.filled .track::before {
	background: linear-gradient(to right, var(--ui-filled-off) 50%, var(--ui-filled-on) 50%);
}
.raised .track::before {
	background: linear-gradient(to right, var(--ui-flat-off) 50%, var(--bg) 50%);
	border: var(--ui-border-width-emphasized) solid var(--m-600);
  border-top-color: var(--m-400);
  border-right-color: var(--m-400);
	box-shadow: var(--ui-dp-2);
}
.outlined .track::before {
	border: var(--ui-border-width-emphasized) solid var(--ui-outline);
	clip-path: inset(100% 44% 100% 100%);
}
.outlined .input:checked + .track::before {
	clip-path: inset(100% 100% 100% 44%);
}
.shaped .track::before {
	height: var(--track-h);
	top: 0;
	border-radius: calc(var(--track-h) * 0.5);
	border: var(--ui-border-width) solid var(--ui-outline);
}

/*
.root:not(.raised):not(.shaped) .input:checked + .track::before {
	border-color: var(--ui-outline-hover);
}
*/

.thumb {
	composes: box from './_ui.m.css';
	display: flex;
	position: absolute;
	top: calc(var(--track-h) - (var(--h) / 2) + 1px);
	left: 0px;
	height: var(--thumb-h);
	min-width: var(--thumb-h);
	margin-bottom: 0;
	margin-right: var(--plr);
	border-radius: 50%;
	z-index: 1;
	box-shadow: var(--ui-dp-2);
	transform: translate(calc(var(--ui-border-width-emphasized,2px) * -1), 0);
	transition:  background-color var(--ui-dpd-1) var(--ui-easing),
		border-color var(--ui-dpd-1) var(--ui-easing),
		transform var(--ui-dpd-1) var(--ui-easing);
}
.input:checked + .track .thumb {
	transform: translate(61.8%, 0);
}
.raised .thumb {
	box-shadow: var(--ui-dp-4);
}
.shaped .input:checked + .track .thumb {
	background-color: var(--ui-flat-on);
}
.shaped:not(.disabled):hover .thumb {
	background-color: var(--ui-flat-hover) !important;
}
.outlined .input:checked + .track .thumb::before {
	opacity: 1 !important;
	display: inline-block;
	transform: scale(.618);
	background-color: var(--ui-outline-hover);
	width: 100%;
	height: 100%;
	border-radius: 50%;
}
.input {
	composes: input from './checkbox.m.css';
	height: 100% !important;
	z-index: 2;
}


.checked {

}
.label,
.onLabel,
.offLabel {
	display: inline-block;
	cursor: pointer;
}
.offLabel {
	padding-left: calc(var(--plr) / 2);
}
.label,
.onLabel {
	padding-right: calc(var(--plr) / 2);
}

.root.disabled .inputWrapper {
	opacity: 0.5;
}



/* Added when the switch is invalid */
.invalid {
}

/* Added when the switch is valid */
.valid {
}

/* Added to a read-only Switch */
.readonly {
}

/* Added when the Switch is required */
.required {
}

/* Added when focused */
.focused {
}
